name: Python Tests

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        token: ${{ github.token }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with unittest and coverage
      run: |
        pip install coverage
        coverage run -m unittest discover tests/
        coverage xml
        coverage report

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: "./coverage.xml"
        fail_ci_if_error: true # optional (default = false)
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: snail123815/pybioinfo

    - name: Update README coverage badges
      if: matrix.python-version == '3.13'
      run: |
        # Get coverage for each module
        bio_sequences_cov=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(int(float(root.find('.//package[@name=\"pyBioinfo_modules.bio_sequences\"]').get('line-rate'))*100))")
        wrappers_cov=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(int(float(root.find('.//package[@name=\"pyBioinfo_modules.wrappers\"]').get('line-rate'))*100))")
        basic_cov=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(int(float(root.find('.//package[@name=\"pyBioinfo_modules.basic\"]').get('line-rate'))*100))")
        
        # Update badges in README
        sed -i "s/bio_sequences.*brightgreen)/bio_sequences | ![Coverage](https:\/\/img.shields.io\/badge\/coverage-${bio_sequences_cov}%25-brightgreen)/" readme.md
        sed -i "s/wrappers.*brightgreen)/wrappers | ![Coverage](https:\/\/img.shields.io\/badge\/coverage-${wrappers_cov}%25-brightgreen)/" readme.md
        sed -i "s/basic.*brightgreen)/basic | ![Coverage](https:\/\/img.shields.io\/badge\/coverage-${basic_cov}%25-brightgreen)/" readme.md
        
        # Commit changes
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add readme.md
        git commit -m "ci: Update coverage badges" || echo "No changes to commit"
        git push origin HEAD:${{ github.head_ref }}